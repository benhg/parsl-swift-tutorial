sites: edison
# sites can be set to a comma separated list of remote sites you have access to
# eg.: sites: [beagle] or sites: [beagle, midway]
# The sites definition in the config can be overridden by specifying -sites on the
# swift command line as follows : swift -sites beagle p4.swift

############################# WARNING! #######################################
# NERSC is a government scientific computing center
# Do *NOT* attempt to run on NERSC machines if you do not have access to them.
##############################################################################

# Instructions for Edison
# 1. If you are running remotely on edison , set jobManager: "ssh-cl:pbs"
# Ensure that you have passwordless ssh access to edison from your machine.
site.edison {
    execution {
        type      : "coaster"                         # Use coasters to run on remote sites
        URL       : "edison.nersc.gov"                # Edison login URL
        jobManager: "local:slurm"                     # Connect locally to slurm Local Resource manager(LRM)
        options {
            maxJobs         : 1                       # Max jobs submitted to LRM
            nodeGranularity : 1                       # Integer multiple of this will be requested per job
            maxNodesPerJob  : 1                       # Max Nodes that can be requested per job
            tasksPerNode    : 24                      # Tasks per Node, This is not used here
            maxJobTime      : "00:25:00"              # Time requested per job
    	    jobQueue        : "debug"
        }
    }
    staging             : "local"                     # Stage files from "local" system to Edison
    workDirectory       : "/tmp/"${env.USER}"/swiftwork" # Location for intermediate files
    maxParallelTasks    : 101                         # Maximum number of parallel tasks
    initialParallelTasks: 100                         # Maximum number of tasks at start
    app.ALL { executable: "*" }                       # All tasks to be found from commandline
}

# Instructions for Edison
# 1. If you are running remotely on edison , set jobManager: "ssh-cl:pbs"
# Ensure that you have passwordless ssh access to edison from your machine.
site.edison_multinode {
    execution {
        type      : "coaster"                         # Use coasters to run on remote sites
        URL       : "edison.nersc.gov"                # Edison login URL
        jobManager: "local:slurm"                     # Connect locally to slurm Local Resource manager(LRM)
        options {
            maxJobs         : 1                       # Max jobs submitted to LRM
            nodeGranularity : 2                       # Nodes per job
            maxNodesPerJob  : 2                       # Nodes per job
            maxJobTime      : "00:25:00"              # Time requested per job
    	    jobQueue        : "debug"
            jobOptions {
               	jobType     : "single"                   # Submit jobs via aprun mechanism
                #depth       : "24"                       # 4 cores per task
            }
        }
    }
    staging             : "local"                     # Stage files from "local" system to Edison
    workDirectory       : "/tmp/"${env.USER}"/swiftwork" # Location for intermediate files
    maxParallelTasks    : 101                         # Maximum number of parallel tasks
    initialParallelTasks: 100                         # Maximum number of tasks at start
    app.ALL { executable: "*" }                       # All tasks to be found from commandline
}



# Instructions for Hopper
# 1. If you are running on the hopper login nodes, set jobManager: "local:pbs"
# 2. Find your project name/allocation and set jobProject : "YOUR_PROJECT_ON_HOPPER"
# 3. Set userHomeOverride : "/lustre/hopper2/YOUR_USERNAME_ON_HOPPER/swiftwork"
# 4. Set workDirectory : "/tmp/YOUR_USERNAME_ON_HOPPER/swiftwork"
site.hopper {
    execution {
        type      : "coaster"                         # Use coasters to run on remote sites
        URL       : "hopper.nersc.gov"                # Hopper login URL
        jobManager: "local:pbs"                       # use ssh-cl to connect, pbs is the Local Resource manager(LRM)
        options {
            maxJobs         : 1                       # Max jobs submitted to LRM
            nodeGranularity : 1                       # Nodes per job
            maxNodesPerJob  : 1                       # Nodes per job
            tasksPerNode    : 4                       # Tasks per Node
            maxJobTime      : "00:25:00"              # Time requested per job
            workerLoggingLevel : DEBUG
            workerLoggingDirectory : ${env.PWD}/"workerlogs"
            jobOptions {
                pbs.aprun: true                       # Submit jobs via aprun mechanism
                pbs.mpp  : true                       # Mpp enabled
                depth    : "4"                        # 4 cores per task
            }
        }
    }
    staging             : "local"                     # Stage files from "local" system to Hopper
    workDirectory       : "/tmp/"${env.USER}"/swiftwork" # Location for intermediate files
    maxParallelTasks    : 101                         # Maximum number of parallel tasks
    initialParallelTasks: 100                         # Maximum number of tasks at start
    app.ALL { executable: "*" }                       # All tasks to be found from commandline
}




TCPPortRange: "50000,51000"                           # TCP port range used by swift to communicate with remote sites
lazyErrors: false                                     # Swift fails immediately upon encountering an error
executionRetries: 0                                   # Set number of retries upon task failures
keepSiteDir: true                                     # Keep Site Dir (useful for debug)
providerStagingPinSwiftFiles: false                   # Pin staging files (useful for debug)
alwaysTransferWrapperLog: true                        # Transfer wrapper logs (useful for debug)
